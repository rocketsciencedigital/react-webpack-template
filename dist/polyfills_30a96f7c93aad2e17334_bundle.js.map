{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./src/polyfills.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","./node_modules/whatwg-fetch/fetch.js","t","e","self","fetch","support","searchParams","iterable","Symbol","blob","Blob","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","Headers","append","normalizeName","normalizeValue","oldValue","this","map","delete","has","set","forEach","callback","thisArg","keys","items","push","iteratorFor","values","entries","iterator","methods","Request","clone","body","_bodyInit","Body","Response","status","statusText","headers","url","error","response","type","redirectStatuses","redirect","RangeError","location","input","init","Promise","resolve","reject","request","xhr","XMLHttpRequest","onload","rawHeaders","options","getAllResponseHeaders","split","line","parts","key","shift","trim","join","responseURL","responseText","onerror","TypeError","ontimeout","open","method","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","next","done","Array","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","rejected","then","text","readAsText","chars","length","fromCharCode","decode","json","JSON","parse","upcased","mode","toUpperCase","referrer","form","bytes","replace","decodeURIComponent","bodyInit","ok"],"mappings":"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","file":"polyfills_30a96f7c93aad2e17334_bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/polyfills.js\");\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","import 'whatwg-fetch'"],"sourceRoot":""}